import 'package:flutter/material.dart';import 'package:oga_artisan/core/app_export.dart';import 'package:oga_artisan/presentation/category_designer_page_page/category_designer_page_page.dart';import 'package:oga_artisan/widgets/app_bar/appbar_leading_iconbutton_two.dart';import 'package:oga_artisan/widgets/app_bar/appbar_subtitle_two.dart';import 'package:oga_artisan/widgets/app_bar/custom_app_bar.dart';import 'package:oga_artisan/widgets/custom_bottom_bar.dart';import 'package:oga_artisan/widgets/custom_elevated_button.dart';
// ignore_for_file: must_be_immutable
class SettingsPageScreen extends StatelessWidget {SettingsPageScreen({Key? key}) : super(key: key);

GlobalKey<NavigatorState> navigatorKey = GlobalKey();

@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(appBar: _buildAppBar(context), body: Container(width: double.maxFinite, padding: EdgeInsets.symmetric(horizontal: 16.h, vertical: 25.v), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [_buildLucyWilliams(context), SizedBox(height: 24.v), Divider(indent: 1.h), SizedBox(height: 27.v), CustomElevatedButton(height: 22.v, width: 174.h, text: "Change Password", margin: EdgeInsets.only(left: 9.h), leftIcon: Container(margin: EdgeInsets.only(right: 19.h), child: CustomImageView(imagePath: ImageConstant.imgVectorPrimarycontainer, height: 21.v, width: 16.h)), buttonStyle: CustomButtonStyles.none, buttonTextStyle: theme.textTheme.titleMedium!, onPressed: () {onTapChangePassword(context);}), SizedBox(height: 30.v), Padding(padding: EdgeInsets.only(left: 9.h), child: Row(children: [CustomImageView(imagePath: ImageConstant.imgGroup194, height: 15.v, width: 20.h, margin: EdgeInsets.symmetric(vertical: 2.v)), Padding(padding: EdgeInsets.only(left: 15.h), child: Text("Payment Integration", style: theme.textTheme.titleMedium))])), SizedBox(height: 32.v), CustomElevatedButton(height: 20.v, width: 145.h, text: "Update Profile", margin: EdgeInsets.only(left: 9.h), leftIcon: Container(margin: EdgeInsets.only(right: 15.h), child: CustomImageView(imagePath: ImageConstant.imgTrendingup, height: 20.adaptSize, width: 20.adaptSize)), buttonStyle: CustomButtonStyles.none, buttonTextStyle: theme.textTheme.titleMedium!, onPressed: () {onTapUpdateProfile(context);}), SizedBox(height: 34.v), Padding(padding: EdgeInsets.only(left: 8.h), child: Row(children: [CustomImageView(imagePath: ImageConstant.imgLogOutPrimarycontainer, height: 22.adaptSize, width: 22.adaptSize), Padding(padding: EdgeInsets.only(left: 14.h), child: Text("Log out", style: theme.textTheme.titleMedium))])), SizedBox(height: 5.v)])), bottomNavigationBar: _buildBottomBar(context))); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(height: 117.v, leadingWidth: 58.h, leading: AppbarLeadingIconbuttonTwo(imagePath: ImageConstant.imgArrowLeftOnprimarycontainer, margin: EdgeInsets.only(left: 10.h, top: 59.v, bottom: 10.v), onTap: () {onTapArrowLeft(context);}), title: AppbarSubtitleTwo(text: "Settings", margin: EdgeInsets.only(left: 4.h, top: 72.v, bottom: 17.v)), styleType: Style.bgFill_1); } 
/// Section Widget
Widget _buildLucyWilliams(BuildContext context) { return Row(children: [Expanded(child: Row(children: [CustomImageView(imagePath: ImageConstant.imgEllipse38, height: 57.adaptSize, width: 57.adaptSize, radius: BorderRadius.circular(28.h)), Padding(padding: EdgeInsets.only(left: 15.h, top: 5.v, bottom: 5.v), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text("Lucy Williams", style: CustomTextStyles.titleLargePrimary), SizedBox(height: 1.v), Text("Assistant Manager at IT Support", style: CustomTextStyles.titleSmallBluegray400Medium)]))])), CustomImageView(imagePath: ImageConstant.imgVectorPrimary, height: 18.adaptSize, width: 18.adaptSize, margin: EdgeInsets.only(left: 86.h, top: 24.v, bottom: 15.v))]); } 
/// Section Widget
Widget _buildBottomBar(BuildContext context) { return CustomBottomBar(onChanged: (BottomBarEnum type) {Navigator.pushNamed(navigatorKey.currentContext!, getCurrentRoute(type));}); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Home: return AppRoutes.categoryDesignerPagePage; case BottomBarEnum.Uiwmessage: return "/"; case BottomBarEnum.Uilbagalt: return "/"; case BottomBarEnum.Settingsonprimarycontainer: return "/"; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(String currentRoute) { switch (currentRoute) {case AppRoutes.categoryDesignerPagePage: return CategoryDesignerPagePage(); default: return DefaultWidget();} } 

/// Navigates back to the previous screen.
onTapArrowLeft(BuildContext context) { Navigator.pop(context); } 
/// Navigates to the changePasswordPageScreen when the action is triggered.
onTapChangePassword(BuildContext context) { Navigator.pushNamed(context, AppRoutes.changePasswordPageScreen); } 
/// Navigates to the updateProfilePageScreen when the action is triggered.
onTapUpdateProfile(BuildContext context) { Navigator.pushNamed(context, AppRoutes.updateProfilePageScreen); } 
 }
